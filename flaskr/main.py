from flask import Flask, render_template, Response, request
from json import dumps

app = Flask(__name__)

lyceum_buildings = [
    {"coordinates": [55.752318, 37.637371], "name": "–õ–∏—Ü–µ–π –Ω–∞ –°–æ–ª—è–Ω–∫–µ"},
    {"coordinates": [55.753164, 37.648106], "name": "–í—ã—à–∫–∞ –Ω–∞ –ü–æ–∫—Ä–µ"},
    {"coordinates": [55.760825, 37.652278], "name": "–õ–∏—Ü–µ–π –Ω–∞ –õ—è–ª–µ"},
    {"coordinates": [55.763528, 37.643714], "name": "–õ–∏—Ü–µ–π –Ω–∞ –ë–•"},
    {"coordinates": [55.769390, 37.618911], "name": "–õ–∏—Ü–µ–π –Ω–∞ –ö–æ–ª–æ–±–∫–µ"},
]

posts_dict = [
    {
        "name": "–û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ",
        "diner_id": 0,
        "author": "–ò–≥–æ—Ä—å",
        "place_name": "–î–∞–±–ª–±–∏",
        "body_text": """–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—à—É —Ä—É–±—Ä–∏–∫—É " –ö–æ—Ñ–µ –±—Ä–µ–π–∫", –∏ –Ω–∞—à–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ - –î–∞–±–ª–±–∏.‚òïÔ∏è
            –î–∞–±–ª–±–∏ - –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Å–µ—Ç—å –∫–æ—Ñ–µ–µ–Ωüåç –∏ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–æ–π —Ç–∏—Ç—É–ª–æ–≤–∞–Ω–Ω–æ–π –≤ –†–æ—Å—Å–∏–∏. –í –µ–µ —Å–æ—Å—Ç–∞–≤–µ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–µ —á–µ–º–ø–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏ –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é –∫–æ—Ñ–µ, —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ —Ç—Ä–µ–Ω–µ—Ä—ã, –∞ —Ç–∞–∫–∂–µ –≤–∏—Ü–µ-—á–µ–º–ø–∏–æ–Ω –º–∏—Ä–∞ –ø–æ –æ–±–∂–∞—Ä–∫–µ –∫–æ—Ñ–µ, —Ñ–∏–Ω–∞–ª–∏—Å—Ç –º–∏—Ä–æ–≤–æ–≥–æ —á–µ–º–ø–∏–æ–Ω–∞—Ç–∞ –ø–æ –∑–∞–≤–∞—Ä–∏–≤–∞–Ω–∏—é –∫–æ—Ñ–µüèÜ. –°–µ–π—á–∞—Å –≤ —Å–µ—Ç–∏ –±–æ–ª–µ–µ 60 –∫–æ—Ñ–µ–µ–Ω.
            
            –í –º–µ–Ω—é –º—ã –≤–∏–¥–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–∏–¥–æ–≤ –∫–æ—Ñ–µ, –Ω–æ –µ—Å–ª–∏ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ —á–∞–π, —Ç–æ –¥–ª—è –≤–∞—Å —Ç–æ–∂–µ —á—Ç–æ-—Ç–æ –Ω–∞–π–¥–µ—Ç—Å—è.‚ò∫Ô∏èüçµ
            
            –°–µ–π—á–∞—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞–∫—Ü–∏—è –æ—Å–µ–Ω–Ω–µ-–∑–∏–º–Ω–∏—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤üçÇ‚ùÑÔ∏è, –≥–¥–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–∫—É—Å—ã –∏ –≤–∞—Ä–∏–∞—Ü–∏–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –≤–∏–¥–æ–≤ –∫–æ—Ñ–µ –∏ —á–∞—è. –ö –ø—Ä–∏–º–µ—Ä—É, –ª–∞—Ç—Ç–µ "–¶–≤–µ—Ç—É—â–∞—è –≤–∏—à–Ω—è" –∑–≤—É—á–∏—Ç –æ—á–µ–Ω—å-–æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ.üçí
            
            –ü–æ–º–∏–º–æ –Ω–∞–ø–∏—Ç–∫–æ–≤, –≤ –º–µ–Ω—é –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±–ª—é–¥–∞: —Å–∞–ª–∞—Ç—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åü•ó, —Ä–∞–∑–ª–∏—á–Ω–∞—è –≤—ã–ø–µ—á–∫–∞ü•ß –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! –í—Å—ë —ç—Ç–æ –µ—Å—Ç—å –≤ –î–∞–±–ª–±–∏.
            
            –°–∞–º—ã–µ –±–ª–∏–∂–∞–π—à–∏–µ –∫–æ—Ñ–µ–π–Ω–∏ –∫ –∑–¥–∞–Ω–∏—è–º –ª–∏—Ü–µ—è:
            üìç–°–æ–ª—è–Ω—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫, 1 (–º. –ö–∏—Ç–∞–π –≥–æ—Ä–æ–¥)
            üìç–¶–≤–µ—Ç–Ω–æ–π –±—É–ª—å–≤–∞—Ä, 1 (–º. –¶–≤–µ—Ç–Ω–æ–π –±—É–ª—å–≤–∞—Ä)
            üìç–ú–∏–ª—é—Ç–∏–Ω—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫, 3 (–º. –ß–∏—Å—Ç—ã–µ –ø—Ä—É–¥—ã)
        """,
        "creation_date": "19.10.2023"
    },
    {
        "name": "–°–µ–º–µ–π–Ω–æ–µ –∫–∞—Ñ–µ –∏ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è",
        "diner_id": 3,
        "author": "–í–ª–∞–¥",
        "place_name": "–ê–Ω–¥–µ—Ä—Å–æ–Ω",
        "body_text": """–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è "–ê–Ω–¥–µ—Ä–°–æ–Ω" - —É—é—Ç–Ω–æ–µ –º–µ—Å—Ç–æ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è —Å —Å–µ–º—å–µ–πüë®‚Äçüë©‚Äçüëß‚Äçüë¶. 
        –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π "–ü—É—à–∫–∏–Ω—ä", –∏–Ω—Ç–µ—Ä—å–µ—Ä –∑–¥–µ—Å—å –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Å–æ–±–æ–π –≤—ã—á—É—Ä–Ω–æ—Å—Ç—å—é, –Ω–µ –≤—Å–µ –¥–µ—Å–µ—Ä—Ç—ã –æ–±–ª–∞–¥–∞—é—Ç —Å–≤–æ–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º, –Ω–æ —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –º–µ—à–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –∏ –≤–∫—É—Å–Ω–æ –ø–æ–µ—Å—Ç—å –∑–¥–µ—Å—åüòã! 
        –ó–¥–µ—Å—å –µ—Å—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–æ—Å—Ç–∞–≤–∫–∏, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–≤–µ–∑—É—Ç. –í —ç—Ç–æ–π –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–æ–¥—è—Ç –¥–µ—Ç—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –∏ –¥–∞–∂–µ –≤—ã–ø—É—Å–∫–Ω—ã–µüéâ. –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ –±—ã–ª–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –±–æ–ª—å—à–µ —á–µ—Ç—ã—Ä–µ—Ö —Ç—ã—Å—è—á –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, —Ç–∞–∫ —á—Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –º–æ–∂–Ω–æ –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è! 
        –ü–æ–º–∏–º–æ –¥–µ—Å–µ—Ä—Ç–æ–≤ –∑–¥–µ—Å—å —Ç–∞–∫–∂–µ –µ—Å—Ç—å –∏ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—éü•óü•ô, —Ç–∞–∫ —á—Ç–æ –≥–æ–ª–æ–¥–Ω—ã–º–∏ –æ—Ç—Ç—É–¥–∞ –≤—ã –Ω–µ —É–π–¥–µ—Ç–µ!
            
            üí∏–°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 2000—Ä
            
            –ë–ª–∏–∂–∞–π—à–∏–µ –∫ –∑–¥–∞–Ω–∏—è–º –õ–∏—Ü–µ—è –∞–¥—Ä–µ—Å–∞:
            üìç–£–ª. –ì–∏–ª—è—Ä–æ–≤—Å–∫–æ–≥–æ, 39
            üìç–í–µ—Ä—Ö–Ω—è—è –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è —É–ª., 7, —Å—Ç—Ä. 2
            üìç–ù–∞–±. –ê–∫–∞–¥–µ–º–∏–∫–∞ –¢—É–ø–æ–ª–µ–≤–∞, 15
            üìç–¢–∞–≥–∞–Ω—Å–∫–∞—è —É–ª., 36, —Å—Ç—Ä. 1
            """,
        "creation_date": "3.11.2023"
    }

]

for i in posts_dict:
    if "body_text" in i:
        i["body_text"] = i["body_text"].replace("\n", "<br>")

reviews = [
    {"diner_id": 1, "name": "Max", "rating": 3, "text": "great place, bad food"},
    {"diner_id": 0, "name": "Ivan", "rating": 5, "text": "impressive, very nice"},
    {"diner_id": 1, "name": "Keril", "rating": 1, "text": "my friend died here"}
]

diners = [
    {"id": 1, "name": "Cofix", "position": [55.754005, 37.636823]},
    {"id": 0, "name": "–î–∞–±–ª–±–∏", "position": [55.754025, 37.635746]},
    {"id": 3, "name": "–ê–Ω–¥–µ—Ä—Å–æ–Ω", "position": [55.783735, 37.632352]},
]


# TODO multiple geographical locations per diner
# make a id to diner name table and make a diner id to location table


@app.route('/')
def index_page():
    return render_template("index.html")


@app.route('/map')
def map_page():
    return render_template("map.html")


@app.route('/blog')
def blog_page():
    return render_template("blog.html", posts=posts_dict)


@app.route("/diners")
def get_diners():
    for diner in diners:
        review = get_official_review(diner["id"])
        if "–ú—ã –µ—â–µ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –æ–±–∑–æ—Ä —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞" in review:
            diner["reviewed"] = False
        else:
            diner["reviewed"] = True

    return Response(dumps(diners, default=str), 200, mimetype='application/json')


@app.route("/lyceum_buildings")
def get_lyceum_buildings():
    return Response(dumps(lyceum_buildings, default=str), 200, mimetype='application/json')


@app.get("/official_review/<int:id>")
def get_official_review(id: int):
    posts_with_matching_id = list(filter(lambda x: x["diner_id"] == id, posts_dict))
    if not posts_with_matching_id:
        text = "–ú—ã –µ—â–µ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –æ–±–∑–æ—Ä —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞"
    else:
        text = posts_with_matching_id[0]["body_text"]

    return f"<div class='official-review'>{text}</div>"


@app.get("/reviews/<int:id>")
def get_reviews(id: int):
    result = []
    for review in reviews:
        if review["diner_id"] == id:
            html_review_elem = f"""<div class="review-item">
                  <span class="review-rating">{review["rating"]} ‚òÖ</span>
                  <span>{review["name"]}</span>
                  <p>{review["text"]}</p>
                </div>"""
            result.append(html_review_elem)

    if result:
        return " ".join(result)

    result = "<div class='no-reviews'>–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤, –æ—Å—Ç–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π!</div>"
    return result


@app.route("/reviews", methods=["POST"])
def add_review():
    review_data = request.form.to_dict()

    review_author_name = review_data["name"]
    review_rating = int(review_data["rating"])
    review_text = review_data["text"]

    # For now just add new review to others, will be reset on program restart
    reviews.append({"diner_id": int(review_data["diner_id"]), "name": review_author_name, "rating": review_rating,
                    "text": review_text})

    return "<div>–°–ø–∞—Å–∏–±–æ, –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Å–∫–æ—Ä–æ –º—ã –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏ –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è —Ç—É—Ç!</div>"


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=80)
